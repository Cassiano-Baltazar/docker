name: Build Images
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 */6 * * *'

jobs:
  build-ubuntu-18:
    runs-on: ubuntu-18.04
    env:
      IMAGE_TAG: "ubuntu-18"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Only build image
        uses: docker/build-push-action@v2
        with:
          context: dockerfiles/${{ env.IMAGE_TAG }}
          file: ./Dockerfile
          push: false
          load: true
          tags: steamcmd/steamcmd:${{ env.IMAGE_TAG }}
      - name: Run and test container
        run: docker run -t steamcmd/steamcmd:${{ env.IMAGE_TAG }}
      - name: Build and push image
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/build-push-action@v2
        with:
          context: dockerfiles/${{ env.IMAGE_TAG }}
          file: ./Dockerfile
          push: true
          load: false
          tags: |
            steamcmd/steamcmd:latest
            steamcmd/steamcmd:ubuntu
            steamcmd/steamcmd:ubuntu-18
            ghcr.io/steamcmd/steamcmd:latest
            ghcr.io/steamcmd/steamcmd:ubuntu
            ghcr.io/steamcmd/steamcmd:ubuntu-18

  build-ubuntu-16:
    runs-on: ubuntu-18.04
    env:
      IMAGE_TAG: "ubuntu-16"
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: docker run steamcmd/steamcmd:$IMAGE_TAG +quit
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:$IMAGE_TAG

  build-alpine-3:
    runs-on: ubuntu-18.04
    needs: build-ubuntu-18
    env:
      IMAGE_TAG: "alpine-3"
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: docker run steamcmd/steamcmd:$IMAGE_TAG +quit
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker tag steamcmd/steamcmd:$IMAGE_TAG steamcmd/steamcmd:alpine
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: for TAG in $IMAGE_TAG alpine; do docker push steamcmd/steamcmd:${TAG}; done

  build-centos-8:
    runs-on: ubuntu-18.04
    needs: build-ubuntu-18
    env:
      IMAGE_TAG: "centos-8"
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: docker run steamcmd/steamcmd:$IMAGE_TAG +quit
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker tag steamcmd/steamcmd:$IMAGE_TAG steamcmd/steamcmd:centos
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: for TAG in $IMAGE_TAG centos; do docker push steamcmd/steamcmd:${TAG}; done

  build-centos-7:
    runs-on: ubuntu-18.04
    needs: build-ubuntu-18
    env:
      IMAGE_TAG: "centos-7"
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: docker run steamcmd/steamcmd:$IMAGE_TAG +quit
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:$IMAGE_TAG

  build-centos-6:
    runs-on: ubuntu-18.04
    needs: build-ubuntu-18
    env:
      IMAGE_TAG: "centos-6"
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: docker run steamcmd/steamcmd:$IMAGE_TAG +quit
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:$IMAGE_TAG

  build-windows-1809:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:windows-1809 .
        working-directory: dockerfiles/windows-1809
      - name: Test Image
        run: docker run steamcmd/steamcmd:windows-1809 +quit
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker tag steamcmd/steamcmd:windows-1809 steamcmd/steamcmd:windows
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:windows-1809
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:windows

  build-windows-core-2019:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:windows-core-2019 .
        working-directory: dockerfiles/windows-core-2019
      - name: Test Image
        run: docker run steamcmd/steamcmd:windows-core-2019 +quit
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker tag steamcmd/steamcmd:windows-core-2019 steamcmd/steamcmd:windows-core
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:windows-core-2019
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:windows-core

  build-windows-core-1809:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:windows-core-1809 .
        working-directory: dockerfiles/windows-core-1809
      - name: Test Image
        run: docker run steamcmd/steamcmd:windows-core-1809 +quit
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:windows-core-1809
